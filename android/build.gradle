buildscript {
    ext.safeExtGet = { prop ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : project.properties['ReactNativeIAP_' + prop]
    }
    repositories {
        google()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion')}")
        classpath("com.android.tools.build:gradle:7.0.4")
    }
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def isNewArchitectureEnabled() {
    return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'com.facebook.react'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 34)
    buildToolsVersion safeExtGet('buildToolsVersion', '34.0.0')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 28)
        targetSdkVersion safeExtGet('targetSdkVersion', 34)
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    buildFeatures {
        buildConfig true
    }
    sourceSets {
        main {
            if (isNewArchitectureEnabled()) {
                java.srcDirs += [
                        "generated/java",
                        "generated/jni"
                ]
            }
        }
    }
}

repositories {
  mavenCentral()
  google()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation "com.android.billingclient:billing:${safeExtGet('googleBillingVersion', '7.0.0')}"
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src")
    libraryName = "InAppPurchase"
    codegenJavaPackageName = "net.class101.iap"
  }
}